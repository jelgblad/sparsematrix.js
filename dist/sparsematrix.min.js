(function(){var e=function(){var t=[],r=[],i={},n=function(n){if(typeof t[n]!=="undefined"){return t[n].exports}i={id:n,filename:n,parent:i,children:[],exports:{},loaded:false};if(typeof r[n]==="undefined"){throw new Error("The factory of "+n+" module not found")}t[n]=r[n](e,i.exports,i,typeof window!=="undefined"?window:typeof global!=="undefined"?global:null);t[n].loaded=true;if(t[n].parent.children){t[n].parent.children.push(t[n])}return t[n].exports};n.def=function(e,t){r[e]=t};return n}();if(typeof require==="undefined"){require=e}e.def("module.js",function(e,t,r,i){"use strict";var n=e("src\\sparseMatrix.js");var s=e("src\\sparseBinaryMatrix.js");var o={sparseMatrix:n.SparseMatrix,sparseBinaryMatrix:s.SparseBinaryMatrix,sparseMathMatrix:s.SparseMathMatrix};if(typeof window==="undefined"&&typeof t!=="undefined"){if(typeof r!=="undefined"&&r.exports){t=r.exports=o}t.sparsematrix=o}else{window.sparsematrix=o}r.exports=t;return r});e.def("src\\sparseMatrix.js",function(e,t,r,i){"use strict";var n=this&&this.__extends||function(e,t){for(var r in t)if(t.hasOwnProperty(r))e[r]=t[r];function i(){this.constructor=e}e.prototype=t===null?Object.create(t):(i.prototype=t.prototype,new i)};var s=e("src\\sparseMatrixBase.js");var o=function(e){n(t,e);function t(t){e.call(this,t);this._data={}}t.prototype._get=function(e,t){if(t===void 0){t=false}var r;if(Array.isArray(e)){r=this.getIndex(e)}else{r=e;if(r>=this.getSize()||r<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data[r.toString()];if(typeof i==="object"&&t){i=JSON.parse(JSON.stringify(i))}return i};t.prototype.get=function(e,t){if(t===void 0){t=false}return this._get(e,t)};t.prototype.getAsNumber=function(e){var t=this._get(e);if(t===undefined){t=0}return t};t.prototype.set=function(e,t){var r;if(Array.isArray(e)){r=this.getIndex(e)}else{r=e;if(r>=this.getSize()||r<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}if(t===false||t===0||t===null||undefined){delete this._data[r.toString()]}else{this._data[r.toString()]=t}};t.prototype.getIndices=function(){return Object.keys(this._data).map(function(e){return parseInt(e)})};t.prototype.clear=function(){this._data={}};return t}(s.SparseMatrixBase);t.SparseMatrix=o;r.exports=t;return r});e.def("src\\sparseBinaryMatrix.js",function(e,t,r,i){"use strict";var n=this&&this.__extends||function(e,t){for(var r in t)if(t.hasOwnProperty(r))e[r]=t[r];function i(){this.constructor=e}e.prototype=t===null?Object.create(t):(i.prototype=t.prototype,new i)};var s=e("src\\sparseMatrixBase.js");var o=function(e){n(t,e);function t(t){e.call(this,t);this._data=[]}t.prototype.get=function(e){var t;if(Array.isArray(e)){t=this.getIndex(e)}else{t=e;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var r=this._data.indexOf(t);if(r>-1){return true}else{return false}};t.prototype.set=function(e,t){var r;if(Array.isArray(e)){r=this.getIndex(e)}else{r=e;if(r>=this.getSize()||r<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data.indexOf(r);if(i>-1){if(t===false||t===0){this._data.splice(i,1)}}else{if(t===true||t===1){this._data.push(r)}}};t.prototype.mergeFrom=function(e){if(this.getSign()!==e.getSign()){throw new Error("SparseMatrix: "+"Can't merge matrices with different signatures")}var t=e.getIndices();for(var r=0;r<t.length;r++){this.set(t[r],true)}};t.prototype.getIndices=function(){return this._data};t.prototype.clear=function(){this._data=[]};return t}(s.SparseMatrixBase);t.SparseBinaryMatrix=o;r.exports=t;return r});e.def("src\\sparseMatrixBase.js",function(e,t,r,i){"use strict";var n=function(){function e(e){this.dimensions=e;if(!Array.isArray(e)){throw new TypeError("SparseMatrix: "+"Array expected")}for(var t=0;t<e.length;t++){if(e[t]<=0){throw new RangeError("SparseMatrix: "+"Dimensions are out of range")}}}e.prototype.getSize=function(){var e=this.dimensions[0];for(var t=1;t<this.dimensions.length;t++){e*=this.dimensions[t]}return e};e.prototype.getCoordinates=function(e){if(e>=this.getSize()||e<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}var t=[];for(var r=1;r<this.dimensions.length;r++){var i=this.dimensions[r];for(var n=r+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}var s=Math.floor(e/i);e=Math.floor(e%i);t.push(s)}t.push(e);return t};e.prototype.getIndex=function(e){if(!Array.isArray(e)){throw new TypeError("SparseMatrix: "+"Array expected")}if(e.length!==this.dimensions.length){throw new Error("SparseMatrix: "+"Wrong number of dimensions in vector ("+e.length+" expected "+this.dimensions.length+")")}for(var t=0;t<this.dimensions.length;t++){if(e[t]>=this.dimensions[t]||e[t]<0){throw new RangeError("SparseMatrix: "+"Coordinates are out of range")}}var r=0;for(var t=0;t<this.dimensions.length-1;t++){var i=e[t];for(var n=t+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}r+=i}r+=e[this.dimensions.length-1];return r};e.prototype.mergeFrom=function(e,t){if(t===void 0){t=false}if(this.getSign()!==e.getSign()){throw new Error("SparseMatrix: "+"Can't merge matrices with different signatures")}var r=this.getSize();var i=e.getSize();for(var n=0;n<i;n++){var s=this.get(n);if(!t&&s!==undefined&&s!==null)continue;var o=e.get(n);if(o===undefined||o===null)continue;this.set(n,e.get(n))}};e.prototype.getSign=function(){var e="";e+=this.dimensions.length;e+="#";for(var t=0;t<this.dimensions.length;t++){e+=this.dimensions[t]}e+="#";e+=this.getSize();return e};return e}();t.SparseMatrixBase=n;r.exports=t;return r});(function(){e("module.js")})()})();