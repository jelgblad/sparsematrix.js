(function(){var r=function(){var e=[],t=[],i={},n=function(n){if(typeof e[n]!=="undefined"){return e[n].exports}i={id:n,filename:n,parent:i,children:[],exports:{},loaded:false};if(typeof t[n]==="undefined"){throw new Error("The factory of "+n+" module not found")}e[n]=t[n](r,i.exports,i,typeof window!=="undefined"?window:typeof global!=="undefined"?global:null);e[n].loaded=true;if(e[n].parent.children){e[n].parent.children.push(e[n])}return e[n].exports};n.def=function(r,e){t[r]=e};return n}();if(typeof require==="undefined"){require=r}r.def("module.js",function(r,e,t,i){"use strict";var n=r("src\\sparseMatrix.js");var s=r("src\\sparseBinaryMatrix.js");window.sparsematrix={sparseMatrix:n.SparseMatrix,sparseBinaryMatrix:s.SparseBinaryMatrix};return t});r.def("src\\sparseMatrix.js",function(r,e,t,i){"use strict";var n=this&&this.__extends||function(r,e){for(var t in e)if(e.hasOwnProperty(t))r[t]=e[t];function i(){this.constructor=r}r.prototype=e===null?Object.create(e):(i.prototype=e.prototype,new i)};var s=r("src\\sparseMatrixBase.js");var a=function(r){n(e,r);function e(e){r.call(this,e);this._data={}}e.prototype.get=function(r,e){if(e===void 0){e=false}var t;if(Array.isArray(r)){t=this.getIndex(r)}else{t=r;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data[t.toString()];if(typeof i==="object"&&e){i=JSON.parse(JSON.stringify(i))}return i};e.prototype.getAsNumber=function(r){var e=this.get(r);if(e===undefined){e=0}return e};e.prototype.set=function(r,e){var t;if(Array.isArray(r)){t=this.getIndex(r)}else{t=r;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}if(e===false||e===0||e===null||undefined){delete this._data[t.toString()]}else{this._data[t.toString()]=e}};e.prototype.clear=function(){this._data=[]};return e}(s.SparseMatrixBase);e.SparseMatrix=a;t.exports=e;return t});r.def("src\\sparseBinaryMatrix.js",function(r,e,t,i){"use strict";var n=this&&this.__extends||function(r,e){for(var t in e)if(e.hasOwnProperty(t))r[t]=e[t];function i(){this.constructor=r}r.prototype=e===null?Object.create(e):(i.prototype=e.prototype,new i)};var s=r("src\\sparseMatrixBase.js");var a=function(r){n(e,r);function e(e){r.call(this,e);this._data=[]}e.prototype.get=function(r){var e;if(Array.isArray(r)){e=this.getIndex(r)}else{e=r;if(e>=this.getSize()||e<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var t=this._data.indexOf(e);if(t>-1){return true}else{return false}};e.prototype.set=function(r,e){var t;if(Array.isArray(r)){t=this.getIndex(r)}else{t=r;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data.indexOf(t);if(i>-1){if(e===false||e===0){this._data.splice(i,1)}}else{if(e===true||e===1){this._data.push(t)}}};e.prototype.mergeFrom=function(r){var e=this.getIndices();var t=r.getIndices();for(var i=0;i<t.length;i++){this.set(t[i],true)}};e.prototype.getIndices=function(){return this._data};e.prototype.clear=function(){this._data=[]};return e}(s.SparseMatrixBase);e.SparseBinaryMatrix=a;t.exports=e;return t});r.def("src\\sparseMatrixBase.js",function(r,e,t,i){"use strict";var n=function(){function r(r){this.dimensions=r;if(!Array.isArray(r)){throw new TypeError("SparseMatrix: "+"Array expected")}for(var e=0;e<r.length;e++){if(r[e]<=0){throw new RangeError("SparseMatrix: "+"Dimensions are out of range")}}}r.prototype.getSize=function(){var r=this.dimensions[0];for(var e=1;e<this.dimensions.length;e++){r*=this.dimensions[e]}return r};r.prototype.getCoordinates=function(r){if(r>=this.getSize()||r<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}var e=[];for(var t=1;t<this.dimensions.length;t++){var i=this.dimensions[t];for(var n=t+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}var s=Math.floor(r/i);r=Math.floor(r%i);e.push(s)}e.push(r);return e};r.prototype.getIndex=function(r){if(!Array.isArray(r)){throw new TypeError("SparseMatrix: "+"Array expected")}if(r.length!==this.dimensions.length){throw new Error("SparseMatrix: "+"Wrong number of dimensions in vector ("+r.length+" expected "+this.dimensions.length+")")}for(var e=0;e<this.dimensions.length;e++){if(r[e]>=this.dimensions[e]||r[e]<0){throw new RangeError("SparseMatrix: "+"Coordinates are out of range")}}var t=0;for(var e=0;e<this.dimensions.length-1;e++){var i=r[e];for(var n=e+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}t+=i}t+=r[this.dimensions.length-1];return t};r.prototype.mergeFrom=function(r,e){if(e===void 0){e=false}var t=this.getSize();var i=r.getSize();for(var n=0;n<i;n++){var s=this.get(n);if(!e&&s!==undefined&&s!==null)continue;var a=r.get(n);if(a===undefined||a===null)continue;this.set(n,r.get(n))}};return r}();e.SparseMatrixBase=n;t.exports=e;return t});(function(){r("module.js")})()})();