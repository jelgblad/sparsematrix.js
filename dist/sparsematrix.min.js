(function(){var e=function(){var r=[],t=[],i={},n=function(n){if(typeof r[n]!=="undefined"){return r[n].exports}i={id:n,filename:n,parent:i,children:[],exports:{},loaded:false};if(typeof t[n]==="undefined"){throw new Error("The factory of "+n+" module not found")}r[n]=t[n](e,i.exports,i,typeof window!=="undefined"?window:typeof global!=="undefined"?global:null);r[n].loaded=true;if(r[n].parent.children){r[n].parent.children.push(r[n])}return r[n].exports};n.def=function(e,r){t[e]=r};return n}();if(typeof require==="undefined"){require=e}e.def("module.js",function(e,r,t,i){"use strict";var n=e("src\\sparseMatrix.js");var s=e("src\\sparseBinaryMatrix.js");var a={sparseMatrix:n.SparseMatrix,sparseBinaryMatrix:s.SparseBinaryMatrix,sparseMathMatrix:s.SparseMathMatrix};if(typeof window==="undefined"&&typeof r!=="undefined"){if(typeof t!=="undefined"&&t.exports){r=t.exports=a}r.sparsematrix=a}else{window.sparsematrix=a}t.exports=r;return t});e.def("src\\sparseBinaryMatrix.js",function(e,r,t,i){"use strict";var n=this&&this.__extends||function(e,r){for(var t in r)if(r.hasOwnProperty(t))e[t]=r[t];function i(){this.constructor=e}e.prototype=r===null?Object.create(r):(i.prototype=r.prototype,new i)};var s=e("src\\sparseMatrixBase.js");var a=function(e){n(r,e);function r(r){e.call(this,r);this._data=[]}r.prototype.get=function(e){var r;if(Array.isArray(e)){r=this.getIndex(e)}else{r=e;if(r>=this.getSize()||r<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var t=this._data.indexOf(r);if(t>-1){return true}else{return false}};r.prototype.set=function(e,r){var t;if(Array.isArray(e)){t=this.getIndex(e)}else{t=e;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data.indexOf(t);if(i>-1){if(r===false||r===0){this._data.splice(i,1)}}else{if(r===true||r===1){this._data.push(t)}}};r.prototype.mergeFrom=function(e){if(this.getSign()!==e.getSign()){throw new Error("SparseMatrix: "+"Can't merge matrices with different signatures")}var r=e.getIndices();for(var t=0;t<r.length;t++){this.set(r[t],true)}};r.prototype.getIndices=function(){return this._data};r.prototype.clear=function(){this._data=[]};return r}(s.SparseMatrixBase);r.SparseBinaryMatrix=a;t.exports=r;return t});e.def("src\\sparseMatrix.js",function(e,r,t,i){"use strict";var n=this&&this.__extends||function(e,r){for(var t in r)if(r.hasOwnProperty(t))e[t]=r[t];function i(){this.constructor=e}e.prototype=r===null?Object.create(r):(i.prototype=r.prototype,new i)};var s=e("src\\sparseMatrixBase.js");var a=function(e){n(r,e);function r(r){e.call(this,r);this._data={}}r.prototype.get=function(e,r){if(r===void 0){r=false}var t;if(Array.isArray(e)){t=this.getIndex(e)}else{t=e;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}var i=this._data[t.toString()];if(typeof i==="object"&&r){i=JSON.parse(JSON.stringify(i))}return i};r.prototype.getAsNumber=function(e){var r=this.get(e);if(r===undefined){r=0}return r};r.prototype.set=function(e,r){var t;if(Array.isArray(e)){t=this.getIndex(e)}else{t=e;if(t>=this.getSize()||t<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}}if(r===false||r===0||r===null||undefined){delete this._data[t.toString()]}else{this._data[t.toString()]=r}};r.prototype.clear=function(){this._data={}};return r}(s.SparseMatrixBase);r.SparseMatrix=a;t.exports=r;return t});e.def("src\\sparseMatrixBase.js",function(e,r,t,i){"use strict";var n=function(){function e(e){this.dimensions=e;if(!Array.isArray(e)){throw new TypeError("SparseMatrix: "+"Array expected")}for(var r=0;r<e.length;r++){if(e[r]<=0){throw new RangeError("SparseMatrix: "+"Dimensions are out of range")}}}e.prototype.getSize=function(){var e=this.dimensions[0];for(var r=1;r<this.dimensions.length;r++){e*=this.dimensions[r]}return e};e.prototype.getCoordinates=function(e){if(e>=this.getSize()||e<0){throw new RangeError("SparseMatrix: "+"Index is out of range")}var r=[];for(var t=1;t<this.dimensions.length;t++){var i=this.dimensions[t];for(var n=t+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}var s=Math.floor(e/i);e=Math.floor(e%i);r.push(s)}r.push(e);return r};e.prototype.getIndex=function(e){if(!Array.isArray(e)){throw new TypeError("SparseMatrix: "+"Array expected")}if(e.length!==this.dimensions.length){throw new Error("SparseMatrix: "+"Wrong number of dimensions in vector ("+e.length+" expected "+this.dimensions.length+")")}for(var r=0;r<this.dimensions.length;r++){if(e[r]>=this.dimensions[r]||e[r]<0){throw new RangeError("SparseMatrix: "+"Coordinates are out of range")}}var t=0;for(var r=0;r<this.dimensions.length-1;r++){var i=e[r];for(var n=r+1;n<this.dimensions.length;n++){i*=this.dimensions[n]}t+=i}t+=e[this.dimensions.length-1];return t};e.prototype.mergeFrom=function(e,r){if(r===void 0){r=false}if(this.getSign()!==e.getSign()){throw new Error("SparseMatrix: "+"Can't merge matrices with different signatures")}var t=this.getSize();var i=e.getSize();for(var n=0;n<i;n++){var s=this.get(n);if(!r&&s!==undefined&&s!==null)continue;var a=e.get(n);if(a===undefined||a===null)continue;this.set(n,e.get(n))}};e.prototype.getSign=function(){var e="";e+=this.dimensions.length;e+="#";for(var r=0;r<this.dimensions.length;r++){e+=this.dimensions[r]}e+="#";e+=this.getSize();return e};return e}();r.SparseMatrixBase=n;t.exports=r;return t});(function(){e("module.js")})()})();